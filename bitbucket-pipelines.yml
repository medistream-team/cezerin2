options:
  docker: true
  size: 2x
definitions:
  services:
    docker:
      memory: 2048
pipelines:
  tags:
    production-*:
      - step:
          name: Docker build and push
          services:
            - docker
          image: atlassian/pipelines-awscli
          deployment: Production
          script:
            - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ECR_REPOSITORY
            - IMAGE=$AWS_ECR_REPOSITORY/cezerin-api
            - echo "$BITBUCKET_BRANCH" "$BITBUCKET_TAG"
            - TAG=$BITBUCKET_TAG
            - docker build -t $IMAGE:$TAG 
              --build-arg nodeEnv=$NODE_ENV 
              --build-arg storeBaseUrl=$STORE_BASE_URL 
              --build-arg adminBaseUrl=$ADMIN_BASE_URL  
              --build-arg apiBaseUrl=$API_BASE_URL 
              --build-arg apiWebSocketUrl=$API_WEB_SOCKET_URL
              --build-arg assetsType=$ASSETS_TYPE
              --build-arg assetsBaseUrl=$ASSETS_BASE_URL
              --build-arg dbHost=$DB_HOST
              --build-arg dbPort=$DB_PORT
              --build-arg dbName=$DB_NAME
              --build-arg dbUser=$DB_USER
              --build-arg dbPass=$DB_PASS
              --build-arg smtpHost=$SMTP_HOST
              --build-arg smtpPort=$SMTP_PORT
              --build-arg smtpSecure=$SMTP_SECURE
              --build-arg smtpUser=$SMTP_USER
              --build-arg smtpPass=$SMTP_PASS
              --build-arg smtpFromName=$SMTP_FROM_NAME
              --build-arg smtpFromAddress=$SMTP_FROM_ADDRESS
              --build-arg jwtSecretKey=$JWT_SECRET_KEY
              --build-arg cookieSecretKey=$COOKIE_SECRET_KEY
            - docker push $IMAGE:$TAG
    staging-*:
      - step:
          name: Docker build and push
          services:
            - docker
          image: atlassian/pipelines-awscli
          deployment: Staging
          script:
            - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ECR_REPOSITORY
            - IMAGE=$AWS_ECR_REPOSITORY/cezerin-api
            - echo "$BITBUCKET_BRANCH" "$BITBUCKET_TAG"
            - TAG=$BITBUCKET_TAG
            - docker build -t $IMAGE:$TAG 
              --build-arg nodeEnv=$NODE_ENV 
              --build-arg storeBaseUrl=$STORE_BASE_URL 
              --build-arg adminBaseUrl=$ADMIN_BASE_URL  
              --build-arg apiBaseUrl=$API_BASE_URL 
              --build-arg apiWebSocketUrl=$API_WEB_SOCKET_URL
              --build-arg assetsType=$ASSETS_TYPE
              --build-arg assetsBaseUrl=$ASSETS_BASE_URL
              --build-arg dbHost=$DB_HOST
              --build-arg dbPort=$DB_PORT
              --build-arg dbName=$DB_NAME
              --build-arg dbUser=$DB_USER
              --build-arg dbPass=$DB_PASS
              --build-arg smtpHost=$SMTP_HOST
              --build-arg smtpPort=$SMTP_PORT
              --build-arg smtpSecure=$SMTP_SECURE
              --build-arg smtpUser=$SMTP_USER
              --build-arg smtpPass=$SMTP_PASS
              --build-arg smtpFromName=$SMTP_FROM_NAME
              --build-arg smtpFromAddress=$SMTP_FROM_ADDRESS
              --build-arg jwtSecretKey=$JWT_SECRET_KEY
              --build-arg cookieSecretKey=$COOKIE_SECRET_KEY 
            - docker push $IMAGE:$TAG